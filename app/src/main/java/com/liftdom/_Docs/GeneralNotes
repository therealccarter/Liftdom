For Liftdom marketing: Attractive unique video, inside jokes, etc.
Look for where to post it, go viral. (XX song? Something awesome).

Lift Hard, Live Easy?

Sharing service/incentive service to increase reps or level

Build it up into something greater than it really is, even if it's legitimately great.
See smolov rogue app page

Create content early to make it look like it has users

On account create, open a direct message to me for messages?

Badges to earn? Plan more game-ifying.

plate calculator in workout assistor

possibly unlock features with high reps

====KEY FEATURES TO IMPLEMENT PRE-RELEASE=======

badges
super-sets
ordered WA

=============


===========THEORICAL===================================



so we've got one block that adds exercises.
Then we've got a block that adds reps@weights.
The problem is that the reps@weights aren't being added correctly to the exercises.
We need to make sure we don't move to the next exercises until the reps@weights are finished.
We could also try an arraylist method, where we store all the info in named arraylists.


CALENDAR - MISSED DAYS:
Every template change we would update a list of active days for the next, say, year.
Then any time the user starts up the app, we'd compare past days to the workout history.
Any days that are not in the workout history get added to the missed days list.
We then display the missed days list in the calendar as red dots.




Welcome screen will be very important. Ask them things while setting up their first workout and use those values
on their profile. If they don't even know their maxes, start them on a super novice program.

===========STAT CHART THEORY===============
Data sets:
    Body weight
    Overall workouts
    Each exercise (can display multiple exercises on some chart)

Need to slide over for profile
bodyfat stuff for graphing
add missed days to calendar

we'll eventually put a charts and stats button on user profiles that want it


 we could have an average weighted set that is able to show general progress
 that main chart will be the workout history + future workouts
 we'll also have charts for each exercise you've done at least once
 also bodyweight/bf%/etc

 we'll have a button to choose an exercise, which then we'll crawl through the past and active template
 (future) to chart it.

 so, depending on which view of the exercise we choose is, we'll have to somehow pass in the view we want
 ie, either overall load or max weight used...either way, we'll be getting back values and dates.

StatOverviewChartClass statOverviewChartClass = new StatOverviewChartClass();

ArrayList<ValueAndDateObject> overviewValueAndDateList = statOverviewChartClass.getOverviewStatValues();

===========

Ctrl P(first is what's going in, second is)

New game + system? bruh++++

After a workout, show level ups and stuff (body chart, etc)

Every day you miss will also contribute to your chart and calendar.


So, how are we going to get this algorithm to work?

We have algorithm values and algorithm exercises stored with the template

We'd have to keep a running tab of which exercises to apply the algorithm to
    based on if the user completed at least the goal sets and reps...maybe not though?

What would go in the running algorithm node?...

Let's go through a scenario:
    The user sets algorithm as such:

        every 1 week, increase reps by 1.
        every 2 weeks, increase sets by 1.
        every 3 weeks, increase weight by 10lbs.

    Each exercise in runningAlgorithm is given a boolean for if it should be operated on (if completed)
    if the boolean is true, we check the timestamp of the last time it was completed.
    Then, if it's been x amount of time, we increment y by z.
    If the time passed is the highest inputted value, reset reps/sets to original values

    Node Theory:

    runningAlgorithm:
        - uid:
            - templateName:
                - BenchPress:
                    - TimeStamp:
                        -(last completed)(ie, 01:26:2017)
                    - 1
                    - 1            In this scenario we'd do something like this:
                    - 2     if it's been algAL.[0] weeks since T.S., increase sets by algAL.[1]
                    - 1     if it's been algAL.[2] weeks since T.S., increase reps by algAL.[3]
                    - 3     if it's been algAL.[4] weeks since T.S., increase weight by algAL.[5]
                    - 10
                    - loop
                - LegPress:


    So we must compare sets/reps completed to sets/reps originally inputted.
    Eventually we'll also have to update the original template values...

0: "Dumbell Incline Press"
1: "10@60"
2: "10@60"
3: "Barbell Overhead Press"
4: "10@115"
5: "10@115"

We need to match this to the inputted goal...
We must break it up into groups I think...or do a sort of running check.
If they match, keep going. If they don't match throw some kind of exception
    and then move to the next one. Or if they do match, add to exercise incrementor list.

==========================================

TODO: Maybe make a dedicated algorithm tracking system in the database? algorithm.child(uid) sort of thing.

premium feature? different algorithms for different exercises

add plate math

Algorithm design:

Keep the original algorithm and applied exercises.

Then in algorithm.child(uid), keep a dynamic log of the exercises to increment.
We'd also somehow keep track of the time increments and shit

The three pillars of Liftdom:

Superior Core Workout Engine        Useful & Attractive Social Media        Fully Functional Forum

Well written articles
Senior Editor?

Get users to generate content - Remember, goal is for the company to run itself
User reps as incentive

Add picture, public comment after completing workout

Maybe have workout assistor also be on a slide layout?

grid view of past workouts and achievements in place of, say, insta pics

Be able to create/join groups (1 team leader, you ask for permission. Transfer permissions)

Workout Assitor overhaul:
Reactive stacked panel view: top is current set, bottom is list view of all the sets/exercises
Algorithm only advances on w/o completion. That way, the algorithm can be locally generated

Daily tips/motivation
"Spread the word!"
Make the whole app feel personalized and exciting and motivating

Checkbox for if you want the workout assistor shortcut in your top app panel/lock screen.

Add bottom navigation to eliminate constant need of nav-drawer.

Other than completed workouts, update feed with
    "looking for partners"
    "checking in @ gym in x minutes"
    "created new public template"

